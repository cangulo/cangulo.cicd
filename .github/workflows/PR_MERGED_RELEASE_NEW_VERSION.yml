# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_PR_MERGED_RELEASE_NEW_VERSION --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: PR_MERGED_RELEASE_NEW_VERSION

on:
  push:
    branches:
      - main

jobs:
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache .nuke/temp, ~/.nuget/packages
        uses: actions/cache@v2
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
      - name: Run './build.cmd ExecuteUnitTests Publish UpdateVersionInFiles ZipReleaseAssetDirectory CreateNewRelease'
        run: ./build.cmd ExecuteUnitTests Publish UpdateVersionInFiles ZipReleaseAssetDirectory CreateNewRelease
        env:
          GitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Calculate Next Release Number
        run: ./build.cmd CalculateNextReleaseNumber
      - name: Update Version In Files
        run: ./build.cmd UpdateVersionInFiles
      - name: Update Version In Files
        run: |
          git config --global user.name 'CI-cangulo.cicd'
          git config --global user.email 'cangulo.cicd@github.com'
          newReleaseNumber=$(cat cicd.json | jq -r .versioningSettings.currentVersion)
          echo $newReleaseNumber
          git commit -am "[ci] version $newReleaseNumbe created"
          git push
      # - name: Publish Dotnet Solution and Zip It
      #   run: ./build.cmd Publish CompressDirectory
      #   env:
      #     GitHubToken: ${{ secrets.GITHUB_TOKEN }}
      # - name: Run './build.cmd ExecuteUnitTests Publish UpdateVersionInFiles ZipReleaseAssetDirectory CreateNewRelease'
      #   run: ./build.cmd ExecuteUnitTests Publish UpdateVersionInFiles ZipReleaseAssetDirectory CreateNewRelease
